
Assignment 2

/*
Display Id, Title, Category Title, Price of the products which are Active and recently added products should be at top
*/
1. SELECT product.ProductId AS "Id",product.ProductName AS "Title",category.CategoryName AS "Category Title",product.Price AS "Price" FROM product,categoryid,category WHERE product.ProductId = categoryid.ProductId AND categoryid.CategoryId = category.CategoryID AND product.Stock > 0 ORDER BY product.ProductId Desc;

/*
Display the list of products which don't have any images
*/
2. SELECT product.ProductId AS "Id",product.ProductName AS "Title" FROM product WHERE product.ProductId NOT IN(SELECT images.ProductId FROM images);
/*
Display all Id, Title and Parent Category Title for all the Categories listed, sorted by Parent Category Title and then Category Title. (If Category is top category then Parent Category Title column should display “Top Category” as value.)
*/
3. SELECT category.CategoryId AS "Id",category.CategoryName AS "Category Title",IF(category.ParentCategoryId > 0,category.CategoryName,"Top Category") AS "Parent Category Title" FROM category ORDER BY "Parent Category Title",category.CategoryName;
/*
Display Id, Title, Parent Category Title of all the leaf Categories (categories which are not parent of any other category)
*/
4. SELECT leaf.CategoryId, leaf.CategoryName, parent.CategoryName AS parent_category_name FROM category leaf, category parent WHERE parent.CategoryId = leaf.ParentCategoryId AND NOT EXISTS(SELECT *  FROM category child WHERE leaf.CategoryId = child.ParentCategoryId);
/*
Display Product Title, Price & Description which falls into particular category Title (i.e. “Mobile”)
*/
5. SELECT product.ProductName AS "Name",product.Price AS "Price",product.Description AS "Description" FROM product WHERE product.ProductId IN (SELECT categoryid.ProductId FROM categoryid WHERE categoryid.CategoryId IN (SELECT category.CategoryId FROM category WHERE category.CategoryName = "Xiaomi"));
/*
Display the list of Products whose Quantity on hand (Inventory) is under 50.
*/
6. SELECT product.ProductId AS "Id",product.ProductName AS "Name" FROM product WHERE product.Stock < 50;


Assignment 3
/*
Display Recent 50 Orders placed (Id, Order Date, Order Total)
*/
1. SELECT orders.OrderId AS "Order Id", orders.OrderDate AS "Order Date", orders.OrderTotal AS "Order Total" FROM orders ORDER BY orders.OrderId DESC LIMIT 50;
/*
Display 10 most expensive Orders
*/
2. SELECT orders.OrderId AS "Order Id", orders.OrderDate AS "Order Date", orders.OrderTotal AS "Order Total" FROM orders ORDER BY orders.OrderTotal DESC LIMIT 10;
/*
/*
Display all the Orders which are placed more than 10 days old and one or more items from those orders are still not shipped
*/
3. SELECT orders.OrderId AS "Order Id",orders.ShopperId As "Shopper Id", orders.OrderDate as "Order Date" FROM orders where orders.OrderDate < DATE_SUB(NOW(), INTERVAL 10 DAY) AND orders.OrderId IN (select orderstatus.OrderId from orderstatus where orderstatus.Status = "Not Shipped");

/*
Display list of shoppers which haven't ordered anything since last month
*/
4. SELECT shopper.ShopperId AS "User Id", user.Name AS "Shopper Name", user.Email AS "Shopper Email",user.Phone AS "Shopper Phone" from shopper,user where shopper.ShopperId = user.UserId AND shopper.ShopperId NOT IN(SELECT DISTINCT orders.ShopperId from orders where MONTH(orders.OrderDate) >= (MONTH(NOW())-1) AND YEAR(orders.OrderDate) = YEAR(NOW()));

/*
Display list of shopper along with orders placed by them in last 15 days
*/
5. SELECT shopper.ShopperId AS "Shopper Id",user.Name AS "Shopper Name", user.Email AS "Shopper Email",orders.OrderId AS "Order Id",orders.OrderDate AS "Order Date", orders.OrderTotal AS "Order Total" from user,shopper RIGHT JOIN orders ON shopper.ShopperId = orders.ShopperId where shopper.ShopperId = user.UserId AND shopper.ShopperId IN(SELECT DISTINCT orders.ShopperId FROM orders WHERE orders.OrderDate > DATE_SUB(NOW(), INTERVAL 15 DAY));
/*
Display list of order items which are in “shipped” state for particular Order Id (i.e.: 1020))
*/
6. SELECT product.ProductId AS "Product Id",product.ProductName AS "Product Name" FROM product WHERE product.ProductId IN(SELECT orderstatus.ProductId from orderstatus where orderstatus.OrderId = "3" AND orderstatus.Status ="Shipped");
/*
Display list of order items along with order placed date which fall between Rs 20 to Rs 50 price
*/
7. SELECT product.ProductId AS "Product Id",product.ProductName As "Product Name",orders.OrderDate AS "Order Date", product.Price FROM product, orders WHERE product.Price BETWEEN 14000 AND 15000 AND (product.ProductId, orders.OrderId) IN (SELECT ProductId, OrderId FROM orderstatus);